<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Dashboard</title>
  <link rel="stylesheet" href="/styles.css">
</head>
<body>
  <h1>Admin Dashboard</h1>

  <h2>Online Users</h2>
  <ul id="online-users">
    <!-- Online users will be dynamically added here -->
  </ul>

  <h2>Chat Rooms</h2>
  <ul id="chat-rooms">
    <!-- Chat rooms will be dynamically added here -->
  </ul>

  <h2>Video Rooms</h2>
  <ul id="video-rooms">
    <!-- Video rooms will be dynamically added here -->
  </ul>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();

    // Function to update the list of online users
    function updateOnlineUsers(users) {
      const onlineUsersList = document.getElementById('online-users');
      onlineUsersList.innerHTML = '';
      users.forEach(user => {
        const li = document.createElement('li');
        li.textContent = `${user.name} (ID: ${user.socketId})`;
        onlineUsersList.appendChild(li);
      });
    }

    // Function to update the list of chat rooms
    function updateChatRooms(rooms) {
      const chatRoomsList = document.getElementById('chat-rooms');
      chatRoomsList.innerHTML = '';
      Object.values(rooms).forEach(room => {
        const li = document.createElement('li');
        li.textContent = `Room ID: ${room.id} - Participants: ${room.participants.length}`;
        chatRoomsList.appendChild(li);
      });
    }

    // Function to update the list of video rooms
    function updateVideoRooms(rooms) {
      const videoRoomsList = document.getElementById('video-rooms');
      videoRoomsList.innerHTML = '';
      Object.values(rooms).forEach(room => {
        const li = document.createElement('li');
        li.textContent = `Room ID: ${room.id} - Participants: ${room.participants.length}`;
        videoRoomsList.appendChild(li);
      });
    }

    // Listen for updates to the online users
    socket.on('online-users', (users) => {
      updateOnlineUsers(users);
    });

    // Listen for updates to the chat rooms
    socket.on('chat-rooms', (rooms) => {
      updateChatRooms(rooms);
    });

    // Listen for updates to the video rooms
    socket.on('video-rooms', (rooms) => {
      updateVideoRooms(rooms);
    });
  </script>
</body>
</html>
